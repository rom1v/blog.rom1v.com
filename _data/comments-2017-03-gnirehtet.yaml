- id: 1
  author: Mathias B.
  author-url: https://matuni.xyz
  date: 2017-03-30 12:12:07+02:00
  contents: |
    Hello,

    Chouette article, super projet. Bravo ! 👍
- id: 2
  author: Philippe G.
  date: 2017-04-05 23:27:11+02:00
  contents: |
    J'ai testé. Bravo !

    Quelle performance peut on espérer ?
    J'obtient environ 13Mb/s en débit et 50ms de ping.
    La limite est elle du à adb ? à l'usb ?
- id: 3
  author: ®om
  date: 2017-04-06 20:17:10+02:00
  contents: |
    J'ai créé un fichier aléatoire de 500Mio :

    {% highlight bash %}
    dd if=/dev/urandom of=test bs=1M count=500
    {% endhighlight %}

    J'ai chronométré le temps nécessaire pour le copier par `adb` directement :

    {% highlight bash %}
    time adb push test /sdcard/
    {% endhighlight %}

    Il a fallu **1mn28**, soit 5,68Mio/s.

    J'ai ensuite hébergé ce fichier sur le PC avec _Apache_, puis j'ai
    chronométré le temps nécessaire pour le télécharger depuis Firefox sur
    Android (tip: `10.0.2.2` est l'adresse du PC depuis le device lorsque
    _gnirehtet_ est activé).

    Ça a pris **1mn35**, soit 5,26Mio/s.

    Les résultats sont donc très proches d'`adb` (légèrement inférieurs sans
    doute parce que les paquets TCP sont découpés en plus petits bouts). Je
    pense donc que la limite vient d'`adb` (l'USB 2 et 3 sont plus rapides).

    Pour info, j'ai fait le même test en wifi (le device et le laptop tous deux
    connectés à ma box) : **7mn20**, soit 1,14Mio/s.
- id: 4
  author: ronan
  date: 2017-04-07 14:35:35+02:00
  contents: |
    Merci Romain,

    Gnirehtet est exactement ce qu'il me fallait …
- id: 5
  author: Jacques
  date: 2017-04-08 21:58:21+02:00
  contents: |
    Salut
    Merci infiniment pour cet utilitaire, c'est _exactement_ ce que je
    cherchais !
    Par contre, quand le lance ./gnirehtet, j'obtiens un horrible "Failure
    [INSTALL_FAILED_OLDER_SDK]"
    De ce que j'ai compris, tu as spécifié un numéro de version minimum dans ton
    APK, et j'aurais une version trop vieille avec mon Android 4.4.2, cest bien
    ça ?

    Y aurait-il une solution autre que de faire la mise à jour d'Android ? (ce
    qui ne m'enchante pas du tout)
- id: 6
  author: ®om
  date: 2017-04-09 10:58:08+02:00
  contents: |
    > De ce que j’ai compris, tu as spécifié un numéro de version minimum dans
    > ton APK, et j’aurais une version trop vieille avec mon Android 4.4.2, cest
    > bien ça ?

    Oui, c'est bien ça.

    > Y aurait-il une solution autre que de faire la mise à jour d’Android ?

    Je te conseille de suivre l'[issue #2].

    [issue #2]: https://github.com/Genymobile/gnirehtet/issues/2

    En gros, il serait possible de supporter des versions plus anciennes :

     - soit en ajoutant une dépendance vers le NDK (ce que je voudrais éviter
       juste pour ça) ;
     - soit en fournissant un mécanisme dégradé pour les anciennes versions
       (polling).

    En attendant, tu peux utiliser [un autre outil][comment vvviperrr] de
    reverse tethering qui fonctionne depuis l'API 14 (mais qui nécessite d'être
    root sur le pc).

    [comment vvviperrr]: https://github.com/Genymobile/gnirehtet/issues/2#issuecomment-292169139

    Dans tous les cas, et indépendamment du reverse tethering, vu le nombre de
    failles de sécurité découvertes depuis les versions 4, il serait raisonnable
    de mettre à jour ;-)
- id: 7
  author: Jacques
  date: 2017-04-11 12:46:45+02:00
  contents: |
    > Dans tous les cas, et indépendamment du reverse tethering, vu le nombre de
    > failles de sécurité découvertes depuis les versions 4, il serait
    > raisonnable de mettre à jour ;-)

    Malheureusement, impossible d'obtenir une mise à jour au-delà de la 4.4.2
    sans rooter l'appareil, le constructeur ne fournissant pas de version
    supérieure. C'est pour ça que je ne suis pas chaud pour l'upgrade.

    Merci pour ta réponse, en tout cas.
- id: 8
  author: paolo
  date: 2017-05-28 09:37:13+02:00
  contents: |
    Très utile. Merci !
- id: 9
  author: Wyles
  date: 2017-06-13 16:41:18+02:00
  contents: |
    Salut !

    Merci, ton outil est franchement génial. Il tourne nickel sous Lineage OS
    (OnePlus 2, 7.1 Nougat) :)

    J'ignore si tu comptes le maintenir plus longtemps que ça, mais as-tu
    envisagé d'y ajouter quelques fonctions ? Personnellement, j'utilise
    [NetGuard](https://github.com/M66B/NetGuard) sur mon téléphone (pare-feu
    open-source qui s'installe en tant que VPN et qui permet de filtrer le
    trafic des applications), mais je suis obligé de le désactiver pour faire
    tourner ton application. Je ne sais pas si c'est possible sans root, mais un
    module permettant de faire passer NetGuard à travers gnirethet serait
    vraiment cool !


    Je me demandais aussi s'il est obligatoire de dépendre d'un serveur DNS
    (comme celui de Google) pour résoudre les adresses. Je ne m'y connais pas
    dans ce domaine, mais n'est-il pas possible de résoudre les adresses de la
    même manière que l'hôte (ou n'importe quel appareil connecté à Internet) le
    ferait ? J'avoue que je ne suis pas fan de l'idée de dépendre d'un système
    tiers.


    Dernièrement, ça n'a aucun rapport avec cette page mais je me permets de te
    conseiller d'ajouter un certificat TLS à ton site web ; des services comme
    [Let's Encrypt](http://letsencrypt.org/) (open source) peuvent t'en générer
    un gratuitement.

    Bonne continuation !
- id: 10
  author: ®om
  date: 2017-06-14 10:42:57+02:00
  contents: |
    > Je ne sais pas si c'est possible sans root, mais un module permettant de
    > faire passer NetGuard à travers gnirethet serait vraiment cool !

    Pour paraphraser
    [NetGuard](https://github.com/M66B/NetGuard/#compatibility) : Android ne
    permet pas de chaîner des services VPN, donc il n'est pas possible
    d'utiliser _gnirehtet_ en même temps que d'autres applications utilisant un
    service VPN.

    > Je me demandais aussi s'il est obligatoire de dépendre d'un serveur DNS
    > (comme celui de Google) pour résoudre les adresses.

    Tu peux préciser l'adresse du ou des serveurs DNS à utiliser :

        ./gnirehtet rt [serial] [-d DNS[,DNS2,...]]

    Par exemple, pour un serveur DNS de _Free_ :

        ./gnirehtet rt -d 212.27.54.252

    Si tu n'en précises pas, il utilise celui de Google (8.8.8.8).

    > Je ne m'y connais pas dans ce domaine, mais n'est-il pas possible de
    > résoudre les adresses de la même manière que l'hôte (ou n'importe quel
    > appareil connecté à Internet) le ferait ?

    Vu que c'est le device Android qui initie les connexions, c'est lui qui
    forge les requêtes DNS (qu'il envoie dans des paquets UDP qui sont relayés
    par _gnirehtet_). Pour cela, il doit connaître l'adresse du serveur DNS à
    utiliser.

    Si tu veux le même serveur que sur le PC, utilise une adresse listée dans
    `/etc/resolv.conf`.

    > je me permets de te conseiller d'ajouter un certificat TLS à ton site web

    Oui, j'ai ça dans la section "à faire un jour" de ma todo-list (virtuelle)…
    :)
- id: 11
  author: mvntp
  date: 2017-07-29 20:11:39+02:00
  contents: |
    Hello, on Android 7.1.2 I have the problem that certain apps (Playstore for
    example) does not recognice the network connection. Other Apps are working
    fine.

    Is there a solution for that?
- id: 12
  author: ®om
  date: 2017-07-30 22:40:56+02:00
  contents: |
    I have no solution (except fixing the apps).

    <https://github.com/Genymobile/gnirehtet/issues/37>
- id: 13
  author: ®om
  date: 2017-08-21 09:13:40+02:00
  contents: |
    @[**Wyles**](#comment-9)

    > Dernièrement, ça n'a aucun rapport avec cette page mais je me permets
    > de te conseiller d'ajouter un certificat TLS à ton site web ; des
    > services comme [Let's Encrypt](http://letsencrypt.org/) (open source)
    > peuvent t'en générer un gratuitement.

    Done ;-)
- id: 14
  author: Jean Francois
  date: 2017-09-01 23:34:37+02:00
  contents: |
    Merci beaucoup pour ce merveilleux utilitaire.
    Il fonctionne très bien avec Galaxy S5 Neo.

    Voici quelques lignes de gnirehtet.cmd que j'ai modifié

    {% highlight dosbatch %}
    CALL :locate_file JAVA "C:\ProgramData\Oracle\Java\javapath\java.exe"
    ...
        ECHO Syntax:%~n0 [re^|un]install ^| rt ^| start ^| stop ^| relay ^| killserver ^| kill
    ...
    :do_killserver
        SETLOCAL EnableDelayedExpansion
        SET filter="WINDOWTITLE EQ gnirehtet_relay_server"
        FOR /F "tokens=2" %%I in ('"TASKLIST /NH /FI %filter%"') DO SET PID=%%I 2>1
        TASKKILL /PID !PID!
        CALL %ADB% kill-server
        ENDLOCAL
    ...
    :do_rt
    @rem CALL :do_install
        CALL :do_relay
        CALL :do_start
        EXIT /B 0
    ...
    :eof
        SET dns=
        SET serial=
        SET ADB=
        SET JAVA=
        SET RELAY=
        SET APK=
        SET VAR_NAME=
        SET ALL_BUT_FIRST=
        SET FNAME=
        SET dparam=
        SET filter=
        SET PID=
    {% endhighlight %}

    Merci encore
- id: 15
  author: ®om
  date: 2017-09-03 12:41:34+02:00
  contents: |
    Content que ce logiciel soit utile :)

    Merci pour le code. Cependant, l'interface en ligne de commande [n'est
    plus écrite dans un script séparé][cli-java] (donc le contenu de ce
    fichier n'existe plus sur la branche de développement).

    Par ailleurs, les contributions de code se font par [pull request].

    [cli-java]: https://github.com/Genymobile/gnirehtet/commit/e0a7bdc5a545555a60a9b7d2066b81a3845a7438
    [pull request]: https://help.github.com/articles/about-pull-requests/
- id: 16
  author: BRUNET
  date: 2017-11-16 11:44:36+01:00
  contents: |
    Encore merci, c'est vraiment super.
- id: 17
  author: xdej
  date: 2018-04-20 11:03:26+02:00
  contents: |
    Très joli, merci !

    Pour faire passer du UDP en natif dans un cable USB, tu peux utiliser
    <https://www.raspberrypi.org/forums/viewtopic.php?f=36&t=18916> :
    Settings / Wireless & Networks / More / Tethering & Portable Hotspot...
    click "USB". Puis, si on est root sur sur l'ordi, taper

    {% highlight bash %}
    while sleep 10
    do
        route del default gw 192.168.42.129 2> /dev/null &&
        date
    done
    {% endhighlight %}

    histoire de virer la route (non prioritaire) de tethering. 192.168.42.129
    est l'IP du téléphone, affichée par `/sbin/route -n`.
